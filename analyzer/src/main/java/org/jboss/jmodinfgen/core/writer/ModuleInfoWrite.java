package org.jboss.jmodinfgen.core.writer;

import org.jboss.jmodinfgen.core.model.ModuleModel;
import org.jboss.jmodinfgen.core.util.Unification;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Date;
import java.io.File;

/**
 * Created by rsearls on 10/22/17.
 */
public class ModuleInfoWrite {

   private final String genFilename = "generated-module-info.java";

   public void writeFile(ModuleModel mModel) {
      if (mModel.getDotFile() != null)
      {
         File dotFileModel = mModel.getDotFile();

         try
         {
            String path = dotFileModel.getParentFile().getCanonicalPath();
            File modFile = new File(path, genFilename);

            try (PrintWriter pWriter = new PrintWriter(modFile))
            {
               pWriter.print(header(mModel));

               Unification unification = mModel.getUnification();
               if (unification != null)
               {
                  pWriter.print(unification.getModuleInfoStart());
                  pWriter.print(unification.getExportsDeclarations());
                  pWriter.print(unification.getRequiresDeclarations());
                  pWriter.print(unification.getOpensDeclarations());
                  pWriter.print(unification.getUsesDeclarations());
                  pWriter.print(unification.getProvidesDeclarations());
                  pWriter.print(unification.toStringUnrsolvedRequiredPackages());
                  pWriter.print(unification.getModuleInfoEnd());
               } else {
                  pWriter.print("// not data found.");
               }
               mModel.setWrittenFile(modFile);

            } catch (FileNotFoundException e)
            {
               System.out.println(e);
            }

         } catch (IOException e)
         {
            System.out.println(e);
         }
      }
   }

   public void printFile(ModuleModel mModel) {
      System.out.println(header(mModel));

      Unification unification = mModel.getUnification();
      if (unification != null)
      {
         System.out.println(unification.getModuleInfoStart());
         System.out.println(unification.getExportsDeclarations());
         System.out.println(unification.getRequiresDeclarations());
         System.out.println(unification.getOpensDeclarations());
         System.out.println(unification.getUsesDeclarations());
         System.out.println(unification.getProvidesDeclarations());
         System.out.println(unification.getModuleInfoEnd());
      } else {
         System.out.println("// not data found.");
      }

   }

   private String header(ModuleModel mModel) {
      StringBuilder sb = new StringBuilder();
      sb.append("/**\n");
      Date date = new Date();
      sb.append("  " + date + "\n");
      sb.append("  File generated by jModInfoGet\n");
      sb.append("\tAnalysis of " + mModel.getRootDir().getAbsolutePath() + "\n");
      if (mModel.getModuleInfoFile() != null)
      {
         sb.append("\t\t" + mModel.getModuleInfoFile().getAbsolutePath() + "\n");
      }
      if (mModel.getDotFile() != null) {
         sb.append("\t\t" + mModel.getDotFile().getAbsolutePath() + "\n");
      }
      if (!mModel.getServicesFileList().isEmpty()) {
         for(File f : mModel.getServicesFileList()) {
            sb.append("\t\t" + f.getAbsolutePath() + "\n");
         }
      }
      sb.append("**/\n");
      return sb.toString();
   }

}
